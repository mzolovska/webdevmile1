services:
  clients-service:
    build: clients-service
    hostname: clients-service
    container_name: clients-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql1:
        condition: service_healthy

  employees-service:
    build: employees-service
    hostname: employees-service
    container_name: employees-service
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql2:
        condition: service_healthy

  products-service:
    build: products-service
    hostname: products-service
    container_name: products-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres1:
        condition: service_healthy


  mysql1:
    image: mysql:5.7
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=clients-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql1:/var/lib/mysql1
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  mysql2:
    image: mysql:5.7
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=employees-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql1:/var/lib/mysql2
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres1:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - -PGUSER=user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=products-db
    healthcheck:
      test: "pg_isready -h postgres1"
      interval: 10s
      timeout: 5s
      retries: 10

  phpmyadmin1:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin1
    links:
      - mysql1
    restart: always
    ports:
      - 5013:80
    environment:
      - PMA_ARBITRARY=1


  phpmyadmin2:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin2
    links:
      - mysql2
    restart: always
    ports:
      - 5014:80
    environment:
      - PMA_ARBITRARY=1

  pgadmin1:
    image: dpage/pgadmin4:latest
    container_name: pgadmin1
    restart: always
    ports:
      - 9000:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@zolovska.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres1
